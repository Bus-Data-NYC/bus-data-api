<!-- index.html -->
<!DOCTYPE html>
<html lang="en" xml:lang="en" >
	<head>
		<meta charset="utf-8" />
		
		<title>NYC Bus Transit Data</title>

		<link rel="icon" href="/favicon.ico" type="image/icon">

		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/typeahead.js/0.11.1/typeahead.bundle.min.js"></script>

		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">

		<style type="text/css">
			.api-docs .row {
				border-bottom: thin solid rgba(0,0,0,0.1);
				padding: 15px 0px 5px 0px;
				box-shadow: 0px 5px 15px -10px rgba(0,0,0,0.5);
			}
		</style>

	</head>
	<body>

		<div class="container" style="margin-top: 20px">

			<h1>
				<b onclick="gohome()" style="cursor:pointer">
					Bus Data API
				</b>  
				<span style="color:grey;font-weight:100">Developer Portal</span>
			</h1>

			<div class="row form-entries">

				<div class="col-xs-12 col-sm-6">
					<form class="panel panel-default form-horizontal" id="signin">
						<div class="panel-heading">
							<b>Sign In</b>
						</div>
						<div class="panel-body">
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Email</label>
								<div class="col-sm-9">
									<input type="email" class="form-control" id="sign_in_email" placeholder="Email">
								</div>
							</div>

							<div class="form-group">
								<label class="col-sm-3 control-label">Password</label>
								<div class="col-sm-9">
									<input type="password" class="form-control" id="sign_in_pw" placeholder="Password">
								</div>
							</div>

							<input class="btn btn-success pull-right" type="submit" value="Sign In">
						</div>
					</form>

					<form class="panel panel-default form-horizontal" id="forgot_pw">
						<div class="panel-heading">
							<b>Get your password if you forgot it</b>
						</div>
						<div class="panel-body">
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Email</label>
								<div class="col-sm-9">
									<input type="email" class="form-control" id="forgot_pw_email" placeholder="Email">
								</div>
							</div>

							<input class="btn btn-warning pull-right" type="submit" value="Send password to email">
						</div>
					</form>
				</div>

				<div class="col-xs-12 col-sm-6">
					<form class="panel panel-default form-horizontal" id="signup">
						<div class="panel-heading">
							<b>Sign Up</b>
						</div>
						<div class="panel-body">
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Email</label>
								<div class="col-sm-9">
									<input type="email" class="form-control" id="sign_up_email" placeholder="Email">
								</div>
							</div>
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Organization</label>
								<div class="col-sm-9">
									<input type="text" class="form-control" id="sign_up_org" placeholder="Organization/Affilliation">
								</div>
							</div>
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Password</label>
								<div class="col-sm-9">
									<input type="password" class="form-control" id="sign_up_pw1" placeholder="Password">
								</div>
							</div>
							
							<div class="form-group">
								<label class="col-sm-3 control-label">Re-enter</label>
								<div class="col-sm-9">
									<input type="password" class="form-control" id="sign_up_pw2" placeholder="Password (re-enter)">
								</div>
							</div>

							<input class="btn btn-info pull-right" type="submit" value="Sign Up">
						</div>
					</form>
				</div>

			</div>

			<div class="login-success" style="display:none">
				<p>
					Hello, <span id="user-email"></span>.
					<br><span id="user-password"></span>.
					<br><span id="user-token"></span>.
				</p>

				<!-- New token success -->
				<span id="new_token_success" style="display:none">
					<i>New token has been created. Re-login to ensure token was properly generated.</i>
					<br><br>
				</span>

				<button class="btn btn-xs btn-warning" onclick="newToken()">
					Get new token
				</button>

				<button class="btn btn-xs btn-danger" onclick="deleteUser()">
					Delete this account
				</button>
			</div>
		</div>
		
		<div class="container api-docs">
			<h3>API Documentation</h3>
			<p>
				Documentation of currently supported API endpoints. All API endpoints begin with <code>/api/</code>. A token is necessary to utilize the API and can be acquired at the <code>/developer</code> portion of the site. The token is passed as with key name <code>token</code> in the header of each request. Because this is a read-only API, all requests are <code>GET</code> requests (unless otherwise noted). For researchers looking to do more than the API supports, we provision read-only access user accounts to the MySQL database on a case-by-case basis. Please scroll to the very bottom of this page for more information.
			</p>

			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>/routes</code></h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
							Returns a list of objects, representing all currently operating routes. Each list item is an object, representing one route.
					</p>
<pre>{
	"route_id": "BX1",
	"agency_id": "MTA NYCT",
	"route_short_name": "Bx1",
	"route_long_name": "Riverdale - Mott Haven",
	"route_desc": "via Grand Concourse / E 138th St",
	"route_url": "http://web.mta.info/nyct/...",
	"route_color": "00AEEF",
	"route_text_color": "FFFFFF"
}</pre>
				</div>
			</div>

			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>routes/:route_id</code></h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
						Returns an object with metadata about a route, including links to the MTA PDF describing the route and names for directions 0 and 1.
					</p>
<pre>{
	"route_id": "B1",
	"agency_id": "MTA NYCT",
	"route_short_name": "B1",
	"route_long_name": "Bay Ridge - Manhattan Beach",
	"route_desc": "via 86th St / Ocean Pkwy",
	"route_url": "http://web.mta.info/...",
	"route_color": "00AEEF",
	"route_text_color": "FFFFFF",
	"directions": [
		"Bay Ridge",
		"Manhattan Beach"
	]
}</pre>
				</div>
			</div>

			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>routes/:route_id/stops</code></h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
						Returns a list with 2 nested lists within, the first representing direction 0 and the second direction 1. Within each nested list is an array of objects, each of which includes metadata about the stop and its location, extracted from the relevant rows of the <code>stops.txt</code> file from the then-current GTFS for that stops. An example object within a nested list is shown below.
					</p>
<pre>{
	"route_id": "BX1",
	"agency_id": "MTA NYCT",
	"route_short_name": "Bx1",
	"route_long_name": "Riverdale - Mott Haven",
	"route_desc": "via Grand Concourse / E 138th St",
	"route_url": "http://web.mta.info/nyct/...",
	"route_color": "00AEEF",
	"route_text_color": "FFFFFF"
}</pre>
				</div>
			</div>

			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>routes/:route_id/stops</code>
																<br><code>/:direction_id</code>
					</h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
						Same as above route, but this time only returns the list of stops specified for variable <code>direction_id</code>. If a direction other than 0 or 1 is supplied, an empty array will be returned. An example object within a returned list is shown below.
					</p>
<pre>{
	"route_id": "BX1",
	"agency_id": "MTA NYCT",
	"route_short_name": "Bx1",
	"route_long_name": "Riverdale - Mott Haven",
	"route_desc": "via Grand Concourse / E 138th St",
	"route_url": "http://web.mta.info/nyct/...",
	"route_color": "00AEEF",
	"route_text_color": "FFFFFF"
}</pre>
				</div>
			</div>


			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>routes/:route_id/stops</code>
																<br><code>/:direction_id/:stop_id</code>
					</h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
						Returns an object with two keys. One <code>stop_times</code>, includes an array of objects with information each instance of an arrival/departure at every stop. The second, object with two keys. The second, <code>actual_times</code>, includes an array of objects indicating recorded arrrivals and departures at each stop. The date, not being specified, defaults to the present day. As a result, the <code>actual_times</code> array may be empty if those values have not be calculated yet.
					</p>
<pre>{
  "trip_id": "UP_D5-Weekday-SDon-146000_B1_44",
  "trip_headsign": "BAY RIDGE 4 AV via 86 ST",
  "arrival_time": "00:20:00",
  "departure_time": "00:20:00",
  "stop_sequence": 1,
  "pickup_type": 0,
  "drop_off_type": 1
}</pre>
				</div>
			</div>

			<div class="row">
				<div class="col-xs-12 col-sm-4">
					<h4 class="pull-right"><code>routes/:route_id/stops</code>
																<br><code>/:direction_id/:stop_id</code>
																<br><code>/date/:date</code>
					</h4>
				</div>
				<div class="col-xs-12 col-sm-8">
					<p>
						Same as above route, except that this time you can specify a different date. Date format is <code>yyyymmdd</code>. Please note that time is in <code>UTC</code> format.
					</p>
<pre>{
  "trip_id": "UP_D5-Weekday-SDon-146000_B1_44",
  "trip_headsign": "BAY RIDGE 4 AV via 86 ST",
  "arrival_time": "00:20:00",
  "departure_time": "00:20:00",
  "stop_sequence": 1,
  "pickup_type": 0,
  "drop_off_type": 1
}</pre>
				</div>
			</div>
		</div>

		<div class="container api-docs">
			<h3>Full Read Access to the DB</h3>
			<p>
				For researchers looking to do more and perform their only queries on the data, we can provision user accounts on a case by case instance and you can either <code>ssh</code> to the MySQL portal or use a tool such as MySQL Workbench to run your own queries. To request a read-only user account, please reach out directly to use by <a href="http://kuanbutts.com/contact/">contacting us</a>.
			</p>
		</div>


		<footer class="container alert" style="color:gray;font-weight:200">
			<span class="pull-right">
				Created by 
				<a href="https://twitter.com/britishnathan" style="color:red">Nathan Johnson</a> 
				and 
				<a href="http://kuanbutts.com/" style="color:red">Kuan Butts</a>.
				<a href="/about" style="font-weight:bold">More about this project.</a>
				<br>
				<small>
					Special thanks to <a href="https://twitter.com/MicrosoftNY">@MicrosoftNY</a> for hosting this project
					and <a href="http://betanyc.us/">BetaNYC</a> for supporting civic tech.
					<br>
					Disclaimer: All information provided without warranty of any kind. Have a nice day. :)
				</small>
			</span>
			<br>
		</footer>

	</body>
	<script>
		//GLOBALS
		var g = {password: null, email: null, token: null};

		// UTILITIES
		function isEmail (email) {
			var re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
			return re.test(email);
		};

		function deleteUser () {
			if (confirm("Are you sure you want to delete this account?")) {
				var em = g.email;
				var pw = g.password;
				var address = "/developer/account/" + em + "/" + pw;

				$("#new_token_success").fadeOut();
				$("#new_token_success")[0].innerHTML = "<i>Please wait... Delete operation can take a few seconds.</i><br><br>"
				$("#new_token_success").fadeIn();

				$.ajax({
					url: address,
					type: "DELETE",
					success: function () {
						window.location.pathname = "/";
					},
					error: function () {
						alert("Something happened, account was not deleted.");
					}
				});
			}
		};  

		function newToken () {
			var em = g.email;
			var tk = g.token;
			var pw = g.password;
			$.post("/developer/new_token/", {email: em, password: pw, token: tk})
				.done(function (token) {
					if (token) {
						$("#user-token")[0].innerHTML = "Your token is updated. New token is <b>" + token + "</b>";
						$("#new_token_success").fadeOut();
						$("#new_token_success").fadeIn();
					} else {
						alert("Something happened. Try again.")
					}
				})
				.fail(function(error) {
					console.log(error);
				});;
		};

		$("#forgot_pw").submit(function (event) {
			event.preventDefault();
			var email = g.email;
			var address = "/developer/email_pw/" + email;
			$.get(address)
				.done(function (data) {
					if (data.email) {
						alert("Email has been sent to " + data.email + ". Check email to access account with password.");
					} else {
						alert("An account with that email does not exist in our system.")
					}
				})
				.fail(function(error) {
					console.log(error);
				});
		});

		$("#signin").submit(function (event) {
			event.preventDefault();
			var email = $("#signin #sign_in_email")[0].value;
			var password = $("#signin #sign_in_pw")[0].value;
			if (email == "" || password == "") {
				alert("Email or password not entered. Please enter and retry.");
			} else {
				var address = "/developer/account/" + email + "/" + password;
				$.get(address)
					.done(function(data) {
						if (data) {
							$(".form-entries").hide();

							$("#user-email")[0].innerText = data.email;
							$("#user-token")[0].innerText = "Your token is " + data.token;
							$("#user-password")[0].innerText = "Your password is " + Array(data.xp.length + 1).join("*");

							g.email = data.email;
							g.token = data.token;
							g.password = data.password;
							
							$(".login-success").show();
						} else {
							console.log("data", data);
							alert("Email or password was incorrect. Try again.")
						}
						data = null;
					})
					.fail(function(error) {
						console.log(error);
					});

			}
		});


		$("#signup").submit(function (event) {
			event.preventDefault();

			var email = $("#signup #sign_up_email")[0].value;
			var org = $("#signup #sign_up_org")[0].value;
			var pw1 = $("#signup #sign_up_pw1")[0].value;
			var pw2 = $("#signup #sign_up_pw2")[0].value;

			if (email == "" || org == "" || pw1 == "" || pw2 == "") {
				alert("Email or password not entered. Please enter and retry.");
			} else if (pw1 !== pw2) {
				alert("Password entries do not match. Try again.")
			} else if (!isEmail(email)) {
				alert("Not a valid email address. Try again.")
			} else {
				$.post("/developer/create/", {email: email, password: pw1, org: org})
					.done(function(data) {
						if (data) {
							if (data.is_dupe) {
								alert("Email address already in use, try a different one.")
							} else {
								$(".form-entries").hide();

								$("#user-email")[0].innerText = email;
								$("#user-token")[0].innerText = "Your token is " + data.token;
								$("#user-password")[0].innerText = "Your password is " + Array(pw1.length + 1).join("*");

								g.email = email;
								g.token = data.token;
								g.password = pw1;

								$(".login-success").show();
							}
						} else {
							alert("Something happened. Try again.")
						}
					})
					.fail(function(error) {
						console.log(error);
					});

			}
		});

		function gohome () {
			window.location.pathname = "/";
		};




	</script>
</html>


